name: Rename and Commit Markdown Files
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  process-markdown:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with: 
          token: ${{ secrets.GITBOOKKEY }}
          fetch-depth: 0
          ref: main

    - name: Set UTF-8 Encoding
      run: |
        export LC_CTYPE="UTF-8"

    - name: Rename and Update Markdown files
      run: |
        for file in $(find developLog -type f -name '*.md'); do
          # README.md와 SUMMARY.md 파일 제외
          if [[ $(basename "$file") != "README.md" && $(basename "$file") != "SUMMARY.md" ]]; then
            # 파일 내용의 첫 번째 제목 줄을 추출
            title=$(grep -m 1 '^#' "$file" | sed 's/^# //')
            
            if [ -n "$title" ]; then
              # 파일의 디렉토리 구조를 유지하면서 제목을 기반으로 새 파일명 생성
              dir=$(dirname "$file")
              new_filename="$dir/$title.md"
              
              # 대상 디렉토리가 없으면 생성
              new_dir=$(dirname "$new_filename")
              mkdir -p "$new_dir"
              
              # 파일 이름이 동일한 경우에도 강제로 업데이트
              if [ "$file" != "$new_filename" ]; then
                echo "Renaming $file to $new_filename"
                mv "$file" "$new_filename"
              else
                echo "Updating timestamp for $file"
                touch "$file"  # 파일의 타임스탬프를 업데이트
              fi
            else
              echo "No valid title found in $file, skipping."
            fi
          else
            echo "Skipping $file (README.md or SUMMARY.md)"
          fi
        done

    - name: Commit changes
      run: |
        git add -A
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git diff --staged --quiet || git commit -m "Rename and update Markdown files based on h1 titles (excluding README and SUMMARY)"
        git push https://${{ secrets.GITBOOKKEY }}@github.com/GoldenPearls/gitBook.git
